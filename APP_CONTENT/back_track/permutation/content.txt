Given a collection of distinct numbers, return all possible permutations.

For example,
[1,2,3] have the following permutations:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]


-------------------------------------------------------------------

    @Test
    public void testPermutations() {
        int[] totalSet={1,2,3};
        ArrayList<ArrayList<Integer>> result=new ArrayList<>();
        ArrayList<Integer> temp=new ArrayList<>();
        backTrack(result,temp,totalSet);
    }

    private static void backTrack(ArrayList<ArrayList<Integer>> result,ArrayList<Integer> temp,int[] totalSet){
        if(temp.size()==totalSet.length){
            result.add(new ArrayList(temp));
        } else{
            for (int i=0;i<totalSet.length;i++){
                if(temp.contains(totalSet[i])) continue;
                temp.add(totalSet[i]);
                backTrack(result,temp,totalSet);
                temp.remove(temp.size()-1);
            }
        }
    }
